{"version":3,"sources":["color.js","App.js"],"names":["theme","App","useState","showCurrentWorking","working","setworking","text","setText","toDos","setToDos","complete","edit","useEffect","loadToDos","saveCurrentWorking","isThisWork","a","async","AsyncStorage","setItem","JSON","stringify","console","log","getItem","y","parse","onChangeEditedText","payload","saveToDos","toSave","s","saveEditedToDo","key","newToDos","TextList","Text","style","styles","doneText","toDoText","View","container","StatusBar","header","TouchableOpacity","onPress","activeOpacity","fontSize","fontWeight","color","TextInput","onSubmitEditing","Date","now","onChangeText","returnKeyType","placeholder","value","input","ScrollView","Object","keys","map","done","toDo","placeholderTextColor","smallInput","btnBox","Platform","OS","confirm","Alert","alert","deleteToDo","AntDesign","name","size","completeToDo","Ionicons","editToDo","MaterialCommunityIcons","StyleSheet","create","flex","backgroundColor","paddingHorizontal","flexDirection","justifyContent","marginTop","padding","borderRadius","marginBottom","paddingVertical","opacity","alignItems","minWidth"],"mappings":"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","file":"static/js/app.3726acd3.chunk.js","sourcesContent":["export const theme = {\n  bg: \"black\",\n  grey: \"#3A3D40\",\n  toDoBg: \"#5C5C60\",\n};","import { StatusBar } from 'expo-status-bar';\nimport { StyleSheet, Text, View, TouchableOpacity, TextInput, ScrollView, Alert, Platform } from 'react-native';\nimport React, { useEffect, useState } from 'react';\nimport { theme } from './color';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { AntDesign, Ionicons, MaterialCommunityIcons } from '@expo/vector-icons';\n\nconst STORAGE_KEY = \"@toDos\";\nconst ISITWORK = \"@isItWork\";\n\nexport default function App() {\n  const [working, setworking] = useState(showCurrentWorking);\n  const [text, setText] = useState(\"\");\n  const [toDos, setToDos] = useState({});\n  const [complete, setComplete] = useState(false);\n  const [edit, setEdit] = useState(false);\n\n  useEffect(() => {\n    loadToDos();\n    showCurrentWorking();\n  }, []);\n\n  const travel = () => setworking(false);\n  const work = () => setworking(true);\n  const saveCurrentWorking = async(isThisWork) => {\n    try {\n      await AsyncStorage.setItem(ISITWORK, JSON.stringify(isThisWork));\n    } catch (error) {\n      console.log(error);\n    } \n  };\n  const showCurrentWorking = async() => {\n    try {\n      const y = await AsyncStorage.getItem(ISITWORK);\n      if(y) {\n        setworking(JSON.parse(y));\n        return y;\n      } else {\n        return false;\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const onChangeText = (payload) => setText(payload);\n  const onChangeEditedText = (payload) => setText(payload);\n  const saveToDos = async (toSave) => { //save list\n    try {\n      await AsyncStorage.setItem(STORAGE_KEY, JSON.stringify(toSave));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const loadToDos = async () => { //load saved lists\n    try {\n      const s = await AsyncStorage.getItem(STORAGE_KEY);\n      if(s) {\n        setToDos(JSON.parse(s));\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const addToDo = async () => { //add list\n    if(text === \"\"){\n      return;\n    }\n    // const newToDos = Object.assign({}, toDos, {[Date.now()]: { text, work: working }}); //combining state without mutating state\n    const newToDos = {...toDos, [Date.now()]: { text, working, complete, edit }}\n    setToDos(newToDos); //put them in the state\n    await saveToDos(newToDos); //\n    setText(\"\");\n  };\n  const saveEditedToDo = async (key) => {    \n    const newToDos = {...toDos}\n    toDos[key].edit = false;\n    newToDos[key].text = text;\n    setToDos(newToDos); //put them in the state\n    await saveToDos(newToDos); //\n    setText(\"\");\n  };\n  const deleteToDo = async (key) => { //delete ToDo\n    if(Platform.OS === \"web\") {\n      const ok = confirm(\"Do you want to delete this to do?\")\n      if(ok) {\n        const newToDos = {...toDos};\n        delete newToDos[key];\n        setToDos(newToDos);\n        saveToDos(newToDos);\n      }\n    } else {\n      Alert.alert(\n        \"Delete To Do?\", \n        \"Are you sure?\", [\n          {text:\"Cancel\"},\n          {text:\"I'm sure\",\n          style: \"destructive\", \n          onPress: () => {\n            const newToDos = {...toDos};\n            delete newToDos[key];\n            setToDos(newToDos);\n            saveToDos(newToDos);\n          }},\n        ]\n      );  \n    } \n  };\n  const completeToDo = async (key) => { //complete ToDo\n    const newToDos = {...toDos};\n    newToDos[key].complete = true;\n    setToDos(newToDos);\n    saveToDos(newToDos);\n  };\n  const editToDo = async (key) => { //complete ToDo\n    const newToDos = {...toDos};\n    newToDos[key].edit = true;\n    setToDos(newToDos);\n    saveToDos(newToDos);\n  };\n  function TextList(key) {\n    return (\n      <Text style={key.complete ? styles.doneText : styles.toDoText}>{key.text}</Text>\n    )\n  }\n  function TextSmallInput(key) {\n    return (\n      <TextInput\n        onSubmitEditing={() => {saveEditedToDo(key.key);}} \n        onChangeText={onChangeEditedText}\n        returnKeyType=\"done\"\n        placeholder={key.text} \n        //value={key.text}\n        style={styles.input}>\n      </TextInput>\n    )\n  }\n  return (\n    <View style={styles.container}>\n      <StatusBar style=\"auto\" />\n      <View style={styles.header}>\n        <TouchableOpacity onPress={() => {work(); saveCurrentWorking(true);}}\n          activeOpacity={0.2}>\n          <Text style={{fontSize: 38, fontWeight: \"600\", color: working ? '#fff' : theme.grey}}>Work</Text>\n        </TouchableOpacity>\n        <TouchableOpacity onPress={() => {travel(); saveCurrentWorking(false);}}>\n          <Text style={{fontSize: 38, fontWeight: \"600\", color: !working ? '#fff' : theme.grey}}>Travel</Text>\n        </TouchableOpacity>        \n      </View>\n      <View>\n        <TextInput\n        onSubmitEditing={addToDo} \n        onChangeText={onChangeText}\n        returnKeyType=\"done\"\n        placeholder={working ? 'Add a To Do' : 'Where do you want to go?'} \n        value={text}\n        style={styles.input}></TextInput>\n        <ScrollView>\n          {Object.keys(toDos).map((key) => \n            toDos[key].working === working ? (\n              <View style={toDos[key].complete ? styles.done : styles.toDo} key={key}>\n                {toDos[key].edit ? (\n                <TextInput\n                  onSubmitEditing={() => {saveEditedToDo(key);}} \n                  onChangeText={onChangeEditedText}\n                  returnKeyType=\"done\"\n                  placeholder={toDos[key].text} \n                  placeholderTextColor=\"#333\"\n                  //value={key.text}\n                  style={styles.smallInput}>\n                </TextInput>\n                ) : (<TextList complete={toDos[key].complete} text={toDos[key].text} />)}\n                <View style={styles.btnBox}>\n                  <TouchableOpacity onPress={() => deleteToDo(key)}><AntDesign name=\"minuscircle\" size={24} color={toDos[key].complete ? \"#555\" : \"white\"} /></TouchableOpacity> \n                  <TouchableOpacity onPress={() => completeToDo(key)}><Ionicons name=\"checkmark-done-circle\" size={30} color={toDos[key].complete ? \"#555\" : \"white\"} /></TouchableOpacity>\n                  <TouchableOpacity onPress={() => editToDo(key)}><MaterialCommunityIcons name=\"clock-edit\" size={30} color={toDos[key].complete ? \"#555\" : \"white\"} /></TouchableOpacity>\n                </View>\n              </View>\n             ) : null\n            )}\n        </ScrollView>       \n      </View>\n    </View>\n  );\n}\n\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: theme.bg,\n    paddingHorizontal: 20,\n  },\n  header: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    marginTop: 100,\n  },\n  input: {\n    marginTop: 10,\n    padding: 10,\n    borderRadius: 10,\n    backgroundColor: \"white\",\n    fontSize: 12,\n  },\n  toDo: {\n    backgroundColor: theme.toDoBg,\n    marginTop: 20,\n    marginBottom: 10,\n    paddingVertical: 20,\n    paddingHorizontal: 20,\n    borderRadius: 15,\n    opacity: 0.7,\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n  },\n  done: {\n    backgroundColor: \"#111\",\n    marginTop: 20,\n    marginBottom: 10,\n    paddingVertical: 20,\n    paddingHorizontal: 20,\n    borderRadius: 15,\n    opacity: 0.7,\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n  },\n  doneText: {\n    flex: 14,\n    fontSize: 16,\n    color: \"#555\",\n    fontWeight: \"500\",\n  },\n  toDoText: {\n    flex: 14,\n    fontSize: 16,\n    color: \"white\",\n    fontWeight: \"500\",\n  },\n  smallInput: {\n    flex: 14,\n    fontSize: 16,\n    color: \"white\",\n    fontWeight: \"500\",\n  },\n  btnBox: {\n    flex: 1,\n    flexDirection: \"row\",\n    justifyContent: \"space-around\",\n    alignItems: \"center\",\n    minWidth: 70,\n  }\n});\n"],"sourceRoot":""}